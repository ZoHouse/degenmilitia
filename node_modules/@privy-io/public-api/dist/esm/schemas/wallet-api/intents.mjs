import{z as t}from"zod";import{Pagination as e}from"../api.mjs";import{UpdatePolicyInput as i,PolicyResponse as r}from"../policy.mjs";import{UpdateKeyQuorumInput as o,KeyQuorumResponse as s}from"./key-quorums.mjs";import{WalletApiRpcInput as n,WalletUpdateInput as a,WalletResponse as l,WalletApiRpcResponse as p}from"./wallets/index.mjs";import"@privy-io/api-base";import"../core.mjs";import"bs58";import"libphonenumber-js/max";import"viem";import"../transaction.mjs";import"./export.mjs";import"./wallets/spark/index.mjs";import"./wallets/spark/utils.mjs";const d=t.enum(["KEY_QUORUM","POLICY","RPC","WALLET"]),c=t.enum(["pending","executed","failed","expired","rejected"]);let _=/[0-9a-z]{24,32}/;const m=(t,e)=>RegExp(`(?:https://(?:[^/]+\\.privy\\.io|privy\\.io)(?:/api)?|http://localhost(?::\\d+)?(?:/api)?)/v1/${t}/${_.source}${e?`/${e}`:""}$`),u=t.object({method:t.literal("POST"),url:t.string().regex(m("wallets","rpc"),"URL must be http(s)://localhost or *.privy.io/api/v1/wallets/[wallet_id]/rpc"),body:n}).strict(),b=t.object({method:t.literal("PATCH"),url:t.string().regex(m("wallets"),"URL must be http(s)://localhost or *.privy.io/api/v1/wallets/[wallet_id]"),body:a}).strict(),y=t.object({method:t.literal("PATCH"),url:t.string().regex(m("key_quorums"),"URL must be http(s)://localhost or *.privy.io/api/v1/key_quorums/[key_quorum_id]"),body:o}).strict(),g=t.object({method:t.literal("PATCH"),url:t.string().regex(m("policies"),"URL must be http(s)://localhost or *.privy.io/api/v1/policies/[policy_id]"),body:i}).strict(),j=t.union([u,b,y,g]),x=t.discriminatedUnion("type",[t.object({type:t.literal("user"),user_id:t.string(),display_name:t.string().optional(),has_signed:t.boolean()}).strict(),t.object({type:t.literal("key"),public_key:t.string(),display_name:t.string().optional(),has_signed:t.boolean()}).strict()]),h=t.object({members:t.array(x),threshold:t.number(),display_name:t.string().optional()}).strict();let v=t.object({intent_id:t.string(),created_by_display_name:t.string(),created_by_id:t.string().optional(),created_at:t.number(),resource_id:t.string(),authorization_details:t.array(h),status:c,expires_at:t.number()}).strict(),L=t.object({status_code:t.number(),executed_at:t.number(),authorized_by_display_name:t.string().optional(),authorized_by_id:t.string().optional()}).strict();const U=v.extend({intent_type:t.literal("KEY_QUORUM"),request_details:y,current_resource_data:s.optional(),action_result:L.extend({response_body:s,prior_state:s}).strict().optional()}).strict(),q=v.extend({intent_type:t.literal("POLICY"),request_details:g,current_resource_data:r.optional(),action_result:L.extend({response_body:r,prior_state:r}).strict().optional()}).strict(),w=v.extend({intent_type:t.literal("RPC"),request_details:u,current_resource_data:l.optional(),action_result:L.extend({response_body:p}).strict().optional()}).strict(),R=v.extend({intent_type:t.literal("WALLET"),request_details:b,current_resource_data:l.optional(),action_result:L.extend({response_body:l,prior_state:l}).strict().optional()}).strict(),k=t.discriminatedUnion("intent_type",[U,q,w,R]),P=t.object({intent_id:t.string({required_error:"Intent ID must be provided",invalid_type_error:"Intent ID is not a valid string"}).min(1)}),C=e.extend({status:c.optional(),intent_type:d.optional(),created_by_id:t.string().optional(),pending_member_id:t.string().optional(),resource_id:t.string().optional()}),f=t.object({data:t.array(k),next_cursor:t.string().nullable()}).strict(),I=t.object({signature:t.string(),timestamp:t.number()}).strict(),T=t.object({signature:t.string()}).strict();export{h as IntentAuthorization,I as IntentAuthorizationInput,x as IntentAuthorizationMember,T as IntentAuthorizeInput,P as IntentIdFromPath,C as IntentListInput,f as IntentListResponse,j as IntentRequestDetails,k as IntentResponse,c as IntentStatus,d as IntentType,y as KeyQuorumIntentRequestDetails,U as KeyQuorumIntentResponse,g as PolicyIntentRequestDetails,q as PolicyIntentResponse,u as RpcIntentRequestDetails,w as RpcIntentResponse,b as WalletIntentRequestDetails,R as WalletIntentResponse,m as createIntentUrlPattern};
