/**
 * Constructs a URL given an origin, path, and optional query and hash objects.
 *
 * This function combines the best features of both implementations:
 * - Preserves trailing paths in origin URLs (important for API versioning like Infura)
 * - Supports hash parameters for client-side routing
 * - Filters out undefined query values to keep URLs clean
 * - Provides comprehensive URL construction capabilities
 *
 * @param params - URL construction parameters
 * @param params.origin - The base URL origin (e.g., 'https://api.privy.io' or 'https://api.privy.io/v1')
 * @param params.path - The path to append (e.g., '/users' or 'users')
 * @param params.query - Optional query parameters to add
 * @param params.hash - Optional hash parameters to add
 *
 * @returns The constructed URL as a string
 *
 * @example
 * ```typescript
 * // Basic URL construction
 * constructURL({origin: 'https://api.privy.io', path: '/api/v1'});
 * // => 'https://api.privy.io/api/v1'
 *
 * // With query parameters
 * constructURL({origin: 'https://api.privy.io', path: '/search', query: {query: 'John Doe'}});
 * // => 'https://api.privy.io/search?query=John+Doe'
 *
 * // With hash parameters
 * constructURL({origin: 'https://app.privy.io', path: '/profile', hash: {section: 'settings'}});
 * // => 'https://app.privy.io/profile#section=settings'
 *
 * // Preserves origin paths (important for API versioning)
 * constructURL({origin: 'https://mainnet.infura.io/v3', path: '/abc123'});
 * // => 'https://mainnet.infura.io/v3/abc123'
 * ```
 */
declare const constructURL: ({ origin, path, query, hash, }: {
    origin: string;
    path: string;
    query?: Record<string, any>;
    hash?: Record<string, any>;
}) => string;

declare const VERSION = "__VERSION__";

export { VERSION, constructURL };
